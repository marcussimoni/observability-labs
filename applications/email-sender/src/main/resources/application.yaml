server:
  port: 8081
  servlet:
    context-path: /
  shutdown: graceful  # habilita shutdown gracioso
  graceful-shutdown:
    timeout: 30s

spring:
  application:
    name: email-sender
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:emailsenderdb}
    username: ${POSTGRES_USER:emailsenderuser}
    password: ${POSTGRES_PASSWORD:emailsenderpassword}
    driver-class-name: org.postgresql.Driver
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximumPoolSize: 5
      minimumIdle: 1
      idleTimeout: 30000
      maxLifetime: 1800000
      connectionTimeout: 30000
      pool-name: email-sender-HikariCP
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        default_schema: emailsender
        dialect: org.hibernate.dialect.PostgreSQLDialect
  mail:
    host: ${MAILHOG_HOST:localhost}
    port: 1025
    username: dummy
    password: dummy
    from: support@bookstore.com
    properties:
      mail.smtp.auth: false
      mail.smtp.starttls.enable: false

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: 5672
    username: guest
    password: guest
    virtual-host: /

  amqp:
    deserialization:
      trust:
        all: true

logging:
  level:
    org.springframework: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

applications:
  user-management:
    host: ${USER_MANAGEMENT_HOST:http://localhost:8082}

management:
  info:
    application:
      name: email-sender-service
      description: Email sender service
    javaVersion: ${java.version}
    javaVendor: ${java.vendor}
    env:
      enabled: true
    build:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    sampling:
      probability: '0.5'

springdoc:
  swagger-ui:
    path: /swagger-ui.html